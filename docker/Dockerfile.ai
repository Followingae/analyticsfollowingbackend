# AI Workers Container - CPU/GPU intensive processing
FROM python:3.11-slim

# Install system dependencies for AI processing
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    libpq-dev \
    python3-dev \
    wget \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install AI-specific dependencies
RUN pip install torch torchvision transformers sentence-transformers scikit-learn

# Copy application code
COPY app/ ./app/
COPY main.py .

# Create directories for model caching
RUN mkdir -p /app/models /app/cache
RUN useradd --create-home --shell /bin/bash aiworker
RUN chown -R aiworker:aiworker /app
USER aiworker

# Environment configuration for AI workers
ENV SERVICE_MODE=ai_worker
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV AI_MODEL_CACHE_DIR=/app/models
ENV TRANSFORMERS_CACHE=/app/cache
ENV HF_HOME=/app/cache

# Health check for AI worker
HEALTHCHECK --interval=120s --timeout=60s --start-period=300s --retries=2 \
    CMD python -c "from app.services.ai.ai_manager_singleton import ai_manager; print('AI worker healthy')" || exit 1

# Start AI-specific Celery workers
CMD ["python", "-m", "celery", "-A", "app.workers.ai_worker", "worker", "--loglevel=info", "--concurrency=2", "--pool=prefork"]