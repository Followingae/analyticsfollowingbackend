{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(C:/Users/user/AppData/Local/Programs/Python/Python312/python.exe debug_collaboration_post.py)",
      "Bash(git commit -m \"$(cat <<''EOF''\n🤝 Fix Collaboration Posts & Auto-Collaborator Creation\n\nMajor collaboration system fixes:\n\n✅ COLLABORATION POSTS FIXED:\n- Fixed missing _get_profile_by_username method preventing collaborator creation\n- Enhanced collaborator detection for existing posts during re-analysis\n- Added automatic thumbnail recovery for posts with missing images\n- Comprehensive error handling and detailed logging for debugging\n\n✅ AUTO-COLLABORATOR CREATION:\n- System now detects coauthorProducers from Instagram collaboration posts\n- Automatically triggers full creator analytics for missing collaborators\n- Background profile creation ensures campaign analytics include all collaborators\n- Works for both new posts and existing posts when re-added\n\n✅ THUMBNAIL PROCESSING:\n- Missing thumbnail_src automatically updated from fresh Apify data\n- CDN processing triggered for posts with incomplete image assets\n- Ensures all collaboration posts display properly in frontend\n\n✅ CAMPAIGN ANALYTICS INTEGRATION:\n- Total followers now includes collaborators when posts are re-processed\n- Campaign reach calculations account for all creators in collaboration posts\n- Collaboration data properly extracted and stored from Instagram\n\n✅ TECHNICAL IMPROVEMENTS:\n- Fixed database query pattern using proper SQLAlchemy select syntax\n- Enhanced logging with Unicode-safe output and detailed error traces\n- Added debug script for testing collaboration post processing\n- Improved error handling with graceful fallbacks\n\n🎯 IMPACT:\n- All collaboration posts now work properly across the entire system\n- Automatic collaborator profile creation ensures accurate analytics\n- Campaign analytics include complete reach calculations\n- Thumbnails display correctly for all collaboration posts\n\nFiles: app/services/standalone_post_analytics_service.py, app/services/campaign_service.py\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\n🚀 Complete System Enhancement: Credits, Subscriptions & B2B Platform\n\nMajor platform upgrades with enterprise-grade features:\n\n✅ ENHANCED CREDITS SYSTEM:\n- Complete credit transaction analytics with in/out summaries\n- Advanced billing dashboard supporting both Stripe and manual payments  \n- Monthly usage tracking with detailed spending analytics\n- Comprehensive credit wallet management with billing cycles\n- Credit topup system with Premium tier discounts (20% off)\n\n✅ STRIPE SUBSCRIPTION INTEGRATION:\n- Full subscription lifecycle management (upgrade/downgrade/cancel)\n- Webhook processing for payment events and subscription changes\n- Stripe customer creation and payment method management\n- Enterprise billing dashboard with usage visualization\n- Credit topup payment links with automated processing\n\n✅ B2B SAAS PLATFORM FEATURES:\n- Subscription tier limits: Free (5 profiles), Standard ($199, 500 profiles), Premium ($499, 2000 profiles)\n- Team management with role-based access controls\n- Credit allowance system with monthly resets and rollover\n- Advanced analytics and business intelligence\n- Multi-payment support (Stripe + manual/bank transfer)\n\n✅ PERFORMANCE OPTIMIZATIONS:\n- Batch post analytics with controlled concurrency (up to 50 posts, max 5 simultaneous)\n- Enhanced error handling and detailed logging across all services\n- Database query optimizations for credit operations\n- Async processing for improved response times\n\n✅ SYSTEM CONFIGURATION:\n- Updated Claude Code settings and MCP integration\n- Comprehensive documentation updates in CLAUDE.md\n- Debug scripts for billing, analytics, and campaign testing\n- Credit wallet repair utilities for data consistency\n\n✅ API ENHANCEMENTS:\n- 15+ new credit management endpoints\n- Stripe webhook processing for real-time updates\n- Advanced transaction search and filtering\n- Subscription management APIs\n- Billing dashboard integration\n\n🎯 BUSINESS IMPACT:\n- Complete B2B SaaS monetization platform ready for enterprise clients\n- Automated billing and subscription management reduces manual overhead\n- Advanced analytics provide business intelligence for decision making\n- Credit system enables flexible usage-based pricing models\n- Multi-payment support accommodates different client preferences\n\nFiles: 20 modified, 8 new (credits, subscriptions, webhooks, analytics, documentation)\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git reset:*)",
      "Bash(git checkout:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\n🚀 Complete System Enhancement: Credits, Subscriptions & B2B Platform\n\nMajor platform upgrades with enterprise-grade features:\n\n✅ ENHANCED CREDITS SYSTEM:\n- Complete credit transaction analytics with in/out summaries\n- Advanced billing dashboard supporting both Stripe and manual payments  \n- Monthly usage tracking with detailed spending analytics\n- Comprehensive credit wallet management with billing cycles\n- Credit topup system with Premium tier discounts (20% off)\n\n✅ STRIPE SUBSCRIPTION INTEGRATION:\n- Full subscription lifecycle management (upgrade/downgrade/cancel)\n- Webhook processing for payment events and subscription changes\n- Stripe customer creation and payment method management\n- Enterprise billing dashboard with usage visualization\n- Credit topup payment links with automated processing\n\n✅ B2B SAAS PLATFORM FEATURES:\n- Subscription tier limits: Free (5 profiles), Standard ($199, 500 profiles), Premium ($499, 2000 profiles)\n- Team management with role-based access controls\n- Credit allowance system with monthly resets and rollover\n- Advanced analytics and business intelligence\n- Multi-payment support (Stripe + manual/bank transfer)\n\n✅ PERFORMANCE OPTIMIZATIONS:\n- Batch post analytics with controlled concurrency (up to 50 posts, max 5 simultaneous)\n- Enhanced error handling and detailed logging across all services\n- Database query optimizations for credit operations\n- Async processing for improved response times\n\n✅ SYSTEM CONFIGURATION:\n- Updated Claude Code settings and MCP integration\n- Comprehensive documentation updates in CLAUDE.md\n- Debug scripts for billing, analytics, and campaign testing\n- Credit wallet repair utilities for data consistency\n- Added .gitignore entries for secret files\n\n✅ API ENHANCEMENTS:\n- 15+ new credit management endpoints\n- Stripe webhook processing for real-time updates\n- Advanced transaction search and filtering\n- Subscription management APIs\n- Billing dashboard integration\n\n🎯 BUSINESS IMPACT:\n- Complete B2B SaaS monetization platform ready for enterprise clients\n- Automated billing and subscription management reduces manual overhead\n- Advanced analytics provide business intelligence for decision making\n- Credit system enables flexible usage-based pricing models\n- Multi-payment support accommodates different client preferences\n\nFiles: 18 modified, 6 new (credits, subscriptions, webhooks, analytics, documentation)\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)",
      "Bash(python:*)",
      "Bash(py -c \"from app.api.user_discovery_routes import router; print(''Import successful!'')\")",
      "Bash(py -c \"from app.api.admin_repair_routes import router; print(''Admin import successful!'')\")",
      "Bash(py -c \"from app.api.admin_repair_routes import router; print(''Admin import successful'')\")",
      "Bash(py -c \"import main; print(''Main application imports successful!'')\")",
      "Bash(py:*)",
      "Bash(curl -s \"http://localhost:8000/api/v1/discovery/browse?page=1&per_page=1\")",
      "Bash(tasklist)",
      "Bash(findstr:*)",
      "Bash(tasklist:*)",
      "Bash(cd:*)",
      "Bash(git add:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\",
      "C:\\d C:\\Users\\user\\Desktop",
      "C:\\Users\\user\\Desktop\\analyticsfollowingfrontend\\analyticsfollowingfrontend\\frontend",
      "C:\\Users\\user\\Desktop",
      "C:\\c\\Users\\user\\Desktop"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "supabase",
    "cloudflare"
  ]
}